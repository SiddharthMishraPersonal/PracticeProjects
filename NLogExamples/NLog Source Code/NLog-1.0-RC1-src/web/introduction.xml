<?xml version="1.0" encoding="windows-1250" ?>
<?xml-stylesheet type="text/xsl" href="style.xsl" ?>
<content lang="en" id="introduction">
    <h3>What is NLog?</h3>
    <p>
        NLog is a .NET logging library designed with simplicity and flexibility in mind. With NLog you 
        can process diagnostic messages emitted from any .NET language, augment them with 
        <link href="layoutrenderers">contextual information</link>, format them according to your preference
        and send them to one or more <link href="targets">targets</link>. 
    </p>
    <p>
        The <link href="netapi">API</link> (application programming interface) is similar 
        to <a href="http://logging.apache.org/log4net/">log4net</a>, and the configuration is very simple.
        NLog uses a <link href="config">routing table</link> while log4net uses a logger hierarchy 
        with attachable appenders. This makes NLog's configuration very easy to read and maintain. 
    </p>
    <p>
        NLog is licensed under the terms of <a href="http://svn.nlog-project.org/repos/nlog/trunk/NLog/LICENSE.txt">BSD license</a>, 
        which permits commercial use and the source code is available to anyone at no cost.
        Everyone is encouraged to test it and report feedback to the mailing list.
    </p>

    <p>
        NLog supports <link href="netapi">.NET</link>, <link href="capi">C/C++</link> and <link href="comapi">COM</link> interop API 
        so that all your application components including legacy modules written in C++/COM can send their messages through
        a common log routing engine.
    </p>
    <p>
        The .NET API is very fast at filtering messages, so that you can keep your logging instructions in code
        and let NLog filter them out at runtime. NLog can filter out as many as 150 million logging instructions
        per second on a single-CPU 1.6 GHz laptop. Add that to <a href="target.AsyncWrapper.html">asynchronous processing</a> and 
        other <a href="targets.html#wrappers">wrappers</a> and you'll get a very powerful and scalable logging tool.
    </p>

    <h3>Recent News</h3>
    <p>2006-06-27: <b style="color: red">NLog 1.0 Release Candidate 1 is available</b>. Release notes can be found <link href="releasenotes">here</link>. The highlights of this release are:
        <ul>
            <li><link href="visualstudio">Visual Studio 2005 Integration</link>. Flash screencast (22 MB) is <a href="http://www.nlog-project.org/">here</a>.</li>
            <li>Ready-to-run <a href="http://svn.nlog-project.org/repos/nlog/trunk/NLog/examples/targets/">example projects for VS2005</a>.</li>
            <li>Optimized <a href="target.File.html">File</a> target that can write to multiple files at once from multiple processes while keeping the files open.</li>
            <li>Automatic <a href="target.File.html">archiving of log files</a></li>
            <li>New <a href="target.WebService.html">WebService</a> and <a href="target.CSVFile.html">CSVFile</a> targets.</li>
            <li>Even more speed improvements in the non-logging area.</li>
        </ul>
    </p>
</content>
